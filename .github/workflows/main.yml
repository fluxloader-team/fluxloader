name: Build & Release

permissions:
    contents: write

on:
    push:
        tags:
            - "*"

env:
    OUTPUT_DIR: dist

jobs:
    build-windows-x64:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - run: npm install --legacy-peer-deps --no-audit
            - run: echo "BUILDNAME=Linux x86_64 AppImage" > .env
            - run: npx electron-builder --win portable --x64
            - uses: actions/upload-artifact@v4
              with:
                  name: windows-x64
                  path: dist/*.exe

    build-windows-arm64:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - run: npm install --legacy-peer-deps --no-audit
            - run: npx electron-builder --win portable --arm64
            - uses: actions/upload-artifact@v4
              with:
                  name: windows-arm64
                  path: dist/*.exe

    build-windows-legacy-x64:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - run: npm install --legacy-peer-deps --no-audit
            - run: npm install --save-dev electron@22.3.27 --legacy-peer-deps --no-audit
            - run: npx electron-builder --win nsis --x64
            - uses: actions/upload-artifact@v4
              with:
                  name: windows-legacy-x64
                  path: dist/*.exe

    build-linux-x64:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - run: sudo apt-get update && sudo apt-get install -y icnsutils graphicsmagick xz-utils rpm
            - run: npm install --legacy-peer-deps --no-audit
            - run: npx electron-builder --linux AppImage deb --x64
            - uses: actions/upload-artifact@v4
              with:
                  name: linux-x64
                  path: |
                      dist/*.AppImage
                      dist/*.deb

    build-linux-arm64:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - run: sudo apt-get update && sudo apt-get install -y icnsutils graphicsmagick xz-utils rpm
            - run: npm install --legacy-peer-deps --no-audit
            - run: npx electron-builder --linux AppImage deb --arm64
            - uses: actions/upload-artifact@v4
              with:
                  name: linux-arm64
                  path: |
                      dist/*.AppImage
                      dist/*.deb

    build-macos-x64:
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - run: npm install --legacy-peer-deps --no-audit
            - run: npx electron-builder --mac zip --x64 --config.mac.identity=null
            - uses: actions/upload-artifact@v4
              with:
                  name: macos-x64
                  path: dist/*.zip

    build-macos-arm64:
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
            - run: npm install --legacy-peer-deps --no-audit
            - run: npx electron-builder --mac zip --arm64 --config.mac.identity=null
            - uses: actions/upload-artifact@v4
              with:
                  name: macos-arm64
                  path: dist/*.zip

    release:
        needs:
            - build-windows-x64
            - build-windows-arm64
            - build-windows-legacy-x64
            - build-linux-x64
            - build-linux-arm64
            - build-macos-x64
            - build-macos-arm64
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v4
              with:
                  path: dist
            - uses: actions/create-release@v1
              id: create_release
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: ${{ github.ref_name }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Upload all assets
              run: |
                  for f in dist/*/*; do
                    filename=$(basename "$f")

                    case "$filename" in
                        *win-x64.exe)      asset_name="Windows x64 Portable" ;;
                        *win-arm64.exe)    asset_name="Windows arm64 Portable" ;;
                        *win-x64-legacy.exe) asset_name="Windows legacy Portable" ;;
                        *mac-x64.zip)      asset_name="macOS x64 Zip" ;;
                        *mac-arm64.zip)    asset_name="macOS arm64 Zip" ;;
                        *linux-x86_64.AppImage) asset_name="Linux x86_64 AppImage" ;;
                        *linux-arm64.AppImage)  asset_name="Linux arm64 AppImage" ;;
                        *linux-arm64.deb)  asset_name="Linux arm64 deb" ;;
                        *linux-amd64.deb)  asset_name="Linux amd64 deb" ;;
                        *) asset_name="$filename" ;;
                    esac

                    echo "Uploading $filename as $asset_name"
                    gh release upload "${{ github.ref_name }}" "$f" \
                        --repo ${{ github.repository }} \
                        --clobber \
                        --name "$asset_name"
                  done
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
